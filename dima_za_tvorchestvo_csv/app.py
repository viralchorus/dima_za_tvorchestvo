import streamlit as st
import pandas as pd
from datetime import datetime

CSV_FILE = "dima_za_tvorchestvo.csv"

# --------------------------------
# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
# --------------------------------
try:
    df = pd.read_csv(CSV_FILE)
except (FileNotFoundError, pd.errors.EmptyDataError):
    df = pd.DataFrame(columns=["–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ë–∞–ª–ª—ã", "–†–µ—Ü–µ–Ω–∑–∏—è", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "–î–∞—Ç–∞"])
    df.to_csv(CSV_FILE, index=False)

# --------------------------------
# –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏
# --------------------------------
def flomaster_score(R, S, T, H, V):
    B = R + S + T + H
    B_prime = B * 1.4
    M = 1.0 + ((V - 1) / 9) * (1.6072 - 1.0)
    return round(B_prime * M)

# --------------------------------
# UI
# --------------------------------
st.title("üé® –î–∏–º–∞ –ó–∞ –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ")
st.write("–û—Ü–µ–Ω–∏ –º—É–∑–ª–æ –∫–∞–∫ –î–º–∏—Ç—Ä–∏–π –ö—É–∑–Ω–µ—Ü–æ–≤. (–¢–æ–ª—å–∫–æ –Ω–µ –Ω–∞–º–æ—á–∏ –ø–∏—Å—é–Ω!)")

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
username = st.text_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è (–µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ ‚Äî –æ—Å—Ç–∞–Ω–µ—Ç–µ—Å—å '–°–µ—Ä–∞—è –ú—ã—à—å (–ù–µ –∑–∞—Ä–µ–≥–∞–Ω)')")
if username.strip() == "":
    username = "–°–µ—Ä–∞—è –ú—ã—à—å (–ù–µ –∑–∞—Ä–µ–≥–∞–Ω)"

category = st.radio("–ß—Ç–æ –æ—Ü–µ–Ω–∏–≤–∞–µ–º?", ["–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", "–¢—Ä–µ–∫", "–ê–ª—å–±–æ–º"], horizontal=True)
name = st.text_input(f"–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ {category.lower()}:")

# –û—Ü–µ–Ω–∫–∏
R = st.slider("üé≠ –†–∏—Ñ–º—ã / –û–±—Ä–∞–∑—ã", 1, 10, 5)
S = st.slider("üéµ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ / –†–∏—Ç–º–∏–∫–∞", 1, 10, 5)
T = st.slider("üî• –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∏–ª—è", 1, 10, 5)
H = st.slider("üí´ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å / –•–∞—Ä–∏–∑–º–∞", 1, 10, 5)

st.markdown("### üåå –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ / –í–∞–π–±")
st.markdown(
    "<div style='padding:8px; border:2px solid #6C63FF; border-radius:10px; background-color:#F3F0FF; color:#000;'>"
    "<b>–ß–µ–º —Å–∏–ª—å–Ω–µ–µ –≤–∞–π–± ‚Äî —Ç–µ–º –≤–∫—É—Å–Ω–µ–µ –∫–≤–∞—Å. –≠—Ç–æ—Ç –∫—Ä–∏—Ç–µ—Ä–∏–π –≤–ª–∏—è–µ—Ç –Ω–∞ –º–Ω–æ–∂–∏—Ç–µ–ª—å –æ–±—â–µ–π –æ—Ü–µ–Ω–∫–∏!</b></div>",
    unsafe_allow_html=True
)
V = st.slider("üåå –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ / –í–∞–π–±", 1, 10, 5, key="vibe_slider")

review = st.text_area("‚úçÔ∏è –ù–∞–ø–∏—à–∏ —Ä–µ—Ü–µ–Ω–∑–∏—é (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):")

if st.button("–ò —á—ë —É –Ω–∞—Å –≤ –∏—Ç–æ–≥–µ?"):
    if name.strip() == "":
        st.warning("‚ö†Ô∏è –í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–µ –±—É–¥—å –º—ã—à—å—é!")
    else:
        score = flomaster_score(R, S, T, H, V)
        st.success(f"–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–ª—è {category.lower()} '{name}': {score} / 90 üéØ")
        st.balloons()

        new_row = {
            "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": category,
            "–ù–∞–∑–≤–∞–Ω–∏–µ": name,
            "–ë–∞–ª–ª—ã": int(score),
            "–†–µ—Ü–µ–Ω–∑–∏—è": review.strip(),
            "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å": username,
            "–î–∞—Ç–∞": datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        }

        df = pd.concat([df, pd.DataFrame([new_row])], ignore_index=True)
        df.to_csv(CSV_FILE, index=False)

# --------------------------------
# –¢–∞–±–ª–∏—Ü–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤
# --------------------------------
st.subheader(f"üèÜ –ö–≤–∞—Å –ß–∞—Ä—Ç: {category}")
cat_df = df[df["–ö–∞—Ç–µ–≥–æ—Ä–∏—è"] == category]
if not cat_df.empty:
    sorted_df = cat_df.sort_values(by="–ë–∞–ª–ª—ã", ascending=False).reset_index(drop=True)
    sorted_df.index += 1
    st.dataframe(sorted_df[["–ù–∞–∑–≤–∞–Ω–∏–µ", "–ë–∞–ª–ª—ã", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "–†–µ—Ü–µ–Ω–∑–∏—è", "–î–∞—Ç–∞"]], use_container_width=True)
else:
    st.info("üëÄ –ü–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.")
