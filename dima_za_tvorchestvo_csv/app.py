import streamlit as st
import pandas as pd
import os

# -----------------------------
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
# -----------------------------
CSV_FILE = "ratings.csv"

# -----------------------------
# –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏
# -----------------------------
def flomaster_score(R, S, T, H, V):
    """–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ —Å–∏—Å—Ç–µ–º–µ –§–ª–æ–º–∞—Å—Ç–µ—Ä–∞"""
    B = R + S + T + H
    B_prime = B * 1.4
    M = 1.0 + ((V - 1) / 9) * (1.6072 - 1.0)
    return round(B_prime * M)  # –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ —Ü–µ–ª–æ–≥–æ


# -----------------------------
# –°–æ–∑–¥–∞–Ω–∏–µ CSV, –µ—Å–ª–∏ –Ω–µ—Ç
# -----------------------------
if not os.path.exists(CSV_FILE) or os.path.getsize(CSV_FILE) == 0:
    df = pd.DataFrame(columns=["–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", "–ë–∞–ª–ª—ã", "–†–µ—Ü–µ–Ω–∑–∏—è", "–û—Ü–µ–Ω—â–∏–∫"])
    df.to_csv(CSV_FILE, index=False)

# -----------------------------
# –ó–∞–≥—Ä—É–∑–∫–∞ CSV
# -----------------------------
try:
    df = pd.read_csv(CSV_FILE)
except pd.errors.EmptyDataError:
    df = pd.DataFrame(columns=["–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", "–ë–∞–ª–ª—ã", "–†–µ—Ü–µ–Ω–∑–∏—è", "–û—Ü–µ–Ω—â–∏–∫"])

# -----------------------------
# –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –ø–∞–¥–µ–∂–µ–π
# -----------------------------
category_forms = {
    "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å": {"who": "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è", "title": "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏"},
    "–¢—Ä–µ–∫": {"who": "—Ç—Ä–µ–∫–∞", "title": "–¢—Ä–µ–∫–∏"},
    "–ê–ª—å–±–æ–º": {"who": "–∞–ª—å–±–æ–º–∞", "title": "–ê–ª—å–±–æ–º—ã"},
}

# -----------------------------
# –ó–∞–≥–æ–ª–æ–≤–æ–∫
# -----------------------------
st.title("üé® –î–∏–º–∞ –ó–∞ –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ")
st.write("–û—Ü–µ–Ω–∏ –º—É–∑–ª–æ –∫–∞–∫ –î–º–∏—Ç—Ä–∏–π –ö—É–∑–Ω–µ—Ü–æ–≤. (–¢–æ–ª—å–∫–æ –Ω–µ –Ω–∞–º–æ—á–∏ –ø–∏—Å—é–Ω!)")

# -----------------------------
# –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
# -----------------------------
category = st.radio(
    "–ß—Ç–æ –≤ —Ä–æ—Ç–∞—Ü–∏–∏ krap'n'kvas —Å–µ–≥–æ–¥–Ω—è?",
    ["–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", "–¢—Ä–µ–∫", "–ê–ª—å–±–æ–º"],
    horizontal=True,
)

forms = category_forms[category]

# -----------------------------
# –ü–æ–ª—è –≤–≤–æ–¥–∞
# -----------------------------
name = st.text_input(f"–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ {forms['who']}:")
artist = ""

if category in ["–¢—Ä–µ–∫", "–ê–ª—å–±–æ–º"]:
    artist = st.text_input("–í–≤–µ–¥–∏—Ç–µ –ø—Å–µ–≤–¥–æ–Ω–∏–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:")

R = st.slider("üé≠ –†–∏—Ñ–º—ã / –û–±—Ä–∞–∑—ã", 1, 10, 5)
S = st.slider("üéµ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ / –†–∏—Ç–º–∏–∫–∞", 1, 10, 5)
T = st.slider("üî• –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∏–ª—è", 1, 10, 5)
H = st.slider("üí´ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å / –•–∞—Ä–∏–∑–º–∞", 1, 10, 5)

st.markdown("### üåå –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ / –í–∞–π–±")
st.markdown(
    """
    <div style='padding:8px; border:2px solid #6C63FF; border-radius:10px; background-color:#F3F0FF; color:#000000;'>
        <b>–ß–µ–º —Å–∏–ª—å–Ω–µ–µ –≤–∞–π–± ‚Äî —Ç–µ–º –≤–∫—É—Å–Ω–µ–µ –∫–≤–∞—Å. –≠—Ç–æ—Ç –∫—Ä–∏—Ç–µ—Ä–∏–π –≤–ª–∏—è–µ—Ç –Ω–∞ –º–Ω–æ–∂–∏—Ç–µ–ª—å –æ–±—â–µ–π –æ—Ü–µ–Ω–∫–∏, –±—Ä–æ!</b>
    </div>
    """,
    unsafe_allow_html=True,
)
V = st.slider("üåå –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ / –í–∞–π–±", 1, 10, 5)

# –ü–æ–ª–µ –Ω–∏–∫–Ω–µ–π–º–∞ –æ—Ü–µ–Ω—â–∏–∫–∞
reviewer = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º:")

# –ü–æ–ª–µ –¥–ª—è —Ä–µ—Ü–µ–Ω–∑–∏–∏
review_text = st.text_area("‚úçÔ∏è –ù–∞–ø–∏—à–∏ —Ä–µ—Ü–µ–Ω–∑–∏—é (–ø–æ –∂–µ–ª–∞–Ω–∏—é):")

# -----------------------------
# –ö–Ω–æ–ø–∫–∞ —Ä–∞—Å—á—ë—Ç–∞
# -----------------------------
if st.button("–ò —á—ë —É –Ω–∞—Å –≤ –∏—Ç–æ–≥–µ?"):
    if name.strip() == "":
        st.warning("‚ö†Ô∏è –¢—ã —á—ë –ß—É–ø–∞? –í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ü–µ–Ω–∫–æ–π, –Ω–µ –±—É–¥—å –º—ã—à—å—é!")
    else:
        score = flomaster_score(R, S, T, H, V)
        st.success(f"–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–ª—è {forms['who']} {name}: {score} / 90 üéØ")
        st.balloons()

        new_row = {
            "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": category,
            "–ù–∞–∑–≤–∞–Ω–∏–µ": name,
            "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å": artist,
            "–ë–∞–ª–ª—ã": score,
            "–†–µ—Ü–µ–Ω–∑–∏—è": review_text,
            "–û—Ü–µ–Ω—â–∏–∫": reviewer if reviewer.strip() else "–°–µ—Ä–∞—è –º—ã—à—å (–ù–µ –∑–∞—Ä–µ–≥–∞–Ω)"
        }

        df = pd.concat([df, pd.DataFrame([new_row])], ignore_index=True)
        df.to_csv(CSV_FILE, index=False)

# -----------------------------
# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞
# -----------------------------
filtered_df = df[df["–ö–∞—Ç–µ–≥–æ—Ä–∏—è"] == category].copy()

if not filtered_df.empty:
    st.subheader(f"üèÜ –ö–≤–∞—Å –ß–∞—Ä—Ç: {forms['title']}")
    filtered_df = filtered_df.sort_values(by="–ë–∞–ª–ª—ã", ascending=False).reset_index(drop=True)
    filtered_df.index += 1
    for i, row in filtered_df.iterrows():
        artist_part = f" ‚Äî {row['–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å']}" if isinstance(row["–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å"], str) and row["–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å"].strip() else ""
        st.markdown(f"{i}. {row['–ù–∞–∑–≤–∞–Ω–∏–µ']}{artist_part} ‚Äî {row['–ë–∞–ª–ª—ã']} / 90")
        if isinstance(row["–†–µ—Ü–µ–Ω–∑–∏—è"], str) and row["–†–µ—Ü–µ–Ω–∑–∏—è"].strip():
            with st.expander("üóí –ß–∏—Ç–∞—Ç—å —Ä–µ—Ü–µ–Ω–∑–∏—é"):
                st.write(row["–†–µ—Ü–µ–Ω–∑–∏—è"])
                st.caption(f"–û—Ü–µ–Ω–∏–ª: {row['–û—Ü–µ–Ω—â–∏–∫']}")
        else:
            st.caption(f"–û—Ü–µ–Ω–∏–ª: {row['–û—Ü–µ–Ω—â–∏–∫']}")

else:
    st.info(f"üëÄ –ü–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {forms['title'].lower()}.")

# -----------------------------
# –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (—Å–∫—Ä—ã—Ç–∞—è)
# -----------------------------
st.markdown("---")
admin_code = st.text_input("üîê –ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:", type="password")

if admin_code == "characterai":
    st.subheader("üß© –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
    st.write("–í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª—è—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ä–µ—Ü–µ–Ω–∑–∏–∏.")

    if not df.empty:
        for i, row in df.iterrows():
            with st.expander(f"{row['–ö–∞—Ç–µ–≥–æ—Ä–∏—è']}: {row['–ù–∞–∑–≤–∞–Ω–∏–µ']} ‚Äî {row['–ë–∞–ª–ª—ã']} / 90"):
                st.write(f"–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {row['–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å']}")
                st.write(f"–†–µ—Ü–µ–Ω–∑–∏—è: {row['–†–µ—Ü–µ–Ω–∑–∏—è']}")
                st.write(f"–û—Ü–µ–Ω—â–∏–∫: {row['–û—Ü–µ–Ω—â–∏–∫']}")
                if st.button(f"üóë –£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å #{i+1}", key=f"delete_{i}"):
                    df = df.drop(index=i)
                    df.to_csv(CSV_FILE, index=False)
                    st.success("‚úÖ –†–µ—Ü–µ–Ω–∑–∏—è —É–¥–∞–ª–µ–Ω–∞!")
                    st.experimental_rerun()
    else:
        st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.")

# -----------------------------
# –ù–∏–∂–Ω—è—è –ø–æ–¥–ø–∏—Å—å
# -----------------------------
st.markdown(
    "<div style='text-align:center; margin-top:60px; color:#999;'># –º—ã—à–∏ –≤—Å–µ–≥–¥–∞ –Ω–∏–∂–µ</div>",
    unsafe_allow_html=True,
)
