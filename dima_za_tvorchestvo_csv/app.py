import streamlit as st
import pandas as pd
import os

# -----------------------------
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
# -----------------------------
st.set_page_config(page_title="–î–∏–º–∞ –ó–∞ –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ", page_icon="üé®", layout="centered")
CSV_FILE = "ratings.csv"

# -----------------------------
# –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏
# -----------------------------
def flomaster_score(R, S, T, H, V):
    """–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ —Å–∏—Å—Ç–µ–º–µ –§–ª–æ–º–∞—Å—Ç–µ—Ä–∞"""
    B = R + S + T + H
    B_prime = B * 1.4
    M = 1.0 + ((V - 1) / 9) * (1.6072 - 1.0)
    return round(B_prime * M)

# -----------------------------
# –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –¥–ª—è –ø–∞–¥–µ–∂–µ–π
# -----------------------------
category_forms = {
    "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å": {"who": "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è", "title": "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏"},
    "–¢—Ä–µ–∫": {"who": "—Ç—Ä–µ–∫–∞", "title": "–¢—Ä–µ–∫–∏"},
    "–ê–ª—å–±–æ–º": {"who": "–∞–ª—å–±–æ–º–∞", "title": "–ê–ª—å–±–æ–º—ã"},
}

# -----------------------------
# –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CSV
# -----------------------------
if os.path.exists(CSV_FILE) and os.path.getsize(CSV_FILE) > 0:
    try:
        df_all = pd.read_csv(CSV_FILE)
    except pd.errors.EmptyDataError:
        df_all = pd.DataFrame(columns=["–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", "–ë–∞–ª–ª—ã", "–†–µ—Ü–µ–Ω–∑–∏—è", "–û—Ü–µ–Ω—â–∏–∫"])
else:
    df_all = pd.DataFrame(columns=["–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", "–ë–∞–ª–ª—ã", "–†–µ—Ü–µ–Ω–∑–∏—è", "–û—Ü–µ–Ω—â–∏–∫"])

# -----------------------------
# –ó–∞–≥–æ–ª–æ–≤–æ–∫
# -----------------------------
st.title("üé® –î–∏–º–∞ –ó–∞ –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ")
st.write("–û—Ü–µ–Ω–∏ –º—É–∑–ª–æ –∫–∞–∫ –î–º–∏—Ç—Ä–∏–π –ö—É–∑–Ω–µ—Ü–æ–≤. (–¢–æ–ª—å–∫–æ –Ω–µ –Ω–∞–º–æ—á–∏ –ø–∏—Å—é–Ω!)")

# -----------------------------
# –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
# -----------------------------
category = st.radio(
    "–ß—Ç–æ –≤ —Ä–æ—Ç–∞—Ü–∏–∏ krap'n'kvas —Å–µ–≥–æ–¥–Ω—è?",
    ["–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", "–¢—Ä–µ–∫", "–ê–ª—å–±–æ–º"],
    horizontal=True
)
forms = category_forms[category]

# -----------------------------
# –ü–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –æ–±—ä–µ–∫—Ç–∞ –æ—Ü–µ–Ω–∫–∏
# -----------------------------
name = st.text_input(f"–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ {forms['who']}:")
artist = ""
if category in ["–¢—Ä–µ–∫", "–ê–ª—å–±–æ–º"]:
    artist = st.text_input("–í–≤–µ–¥–∏—Ç–µ –ø—Å–µ–≤–¥–æ–Ω–∏–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:")

# -----------------------------
# –°–ª–∞–π–¥–µ—Ä—ã
# -----------------------------
R = st.slider("üé≠ –†–∏—Ñ–º—ã / –û–±—Ä–∞–∑—ã", 1, 10, 5)
S = st.slider("üéµ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ / –†–∏—Ç–º–∏–∫–∞", 1, 10, 5)
T = st.slider("üî• –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∏–ª—è", 1, 10, 5)
H = st.slider("üí´ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å / –•–∞—Ä–∏–∑–º–∞", 1, 10, 5)

st.markdown("### üåå –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ / –í–∞–π–±")
st.markdown(
    """
    <div style='padding:8px; border:2px solid #6C63FF; border-radius:10px; background-color:#F3F0FF; color:#000000;'>
        <b>–ß–µ–º —Å–∏–ª—å–Ω–µ–µ –≤–∞–π–± ‚Äî —Ç–µ–º –≤–∫—É—Å–Ω–µ–µ –∫–≤–∞—Å. –≠—Ç–æ—Ç –∫—Ä–∏—Ç–µ—Ä–∏–π –≤–ª–∏—è–µ—Ç –Ω–∞ –º–Ω–æ–∂–∏—Ç–µ–ª—å –æ–±—â–µ–π –æ—Ü–µ–Ω–∫–∏, –±—Ä–æ!</b>
    </div>
    """,
    unsafe_allow_html=True
)
V = st.slider("üåå –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ / –í–∞–π–±", 1, 10, 5)

# -----------------------------
# –ù–∏–∫–Ω–µ–π–º –∏ —Ä–µ—Ü–µ–Ω–∑–∏—è
# -----------------------------
st.markdown("### üß† –û—Ü–µ–Ω—â–∏–∫ –∏ —Ä–µ—Ü–µ–Ω–∑–∏—è")
username = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º (—á—Ç–æ–±—ã –∑–Ω–∞–ª–∏, –∫—Ç–æ –æ—Ü–µ–Ω–∏–ª):")
review = st.text_area("üìù –ù–∞–ø–∏—à–∏ —Ä–µ—Ü–µ–Ω–∑–∏—é (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):", "")

# -----------------------------
# –ö–Ω–æ–ø–∫–∞ "–ò —á—ë —É –Ω–∞—Å –≤ –∏—Ç–æ–≥–µ?"
# -----------------------------
if st.button("–ò —á—ë —É –Ω–∞—Å –≤ –∏—Ç–æ–≥–µ?"):
    if name.strip() == "":
        st.warning("‚ö†Ô∏è –¢—ã —á—ë, –ß—É–ø–∞? –ù–∞–∑–≤–∞–Ω–∏–µ –≤–≤–µ–¥–∏, –Ω–µ –±—É–¥—å –º—ã—à—å—é!")
    else:
        score = flomaster_score(R, S, T, H, V)
        reviewer = username.strip() if username.strip() else "–°–µ—Ä–∞—è –º—ã—à—å (–ù–µ –∑–∞—Ä–µ–≥–∞–Ω)"
        st.success(f"–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–ª—è {forms['who']} {name}: {score} / 90 üéØ")
        st.balloons()

        new_row = pd.DataFrame([{
            "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": category,
            "–ù–∞–∑–≤–∞–Ω–∏–µ": name,
            "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å": artist,
            "–ë–∞–ª–ª—ã": int(score),
            "–†–µ—Ü–µ–Ω–∑–∏—è": review.strip(),
            "–û—Ü–µ–Ω—â–∏–∫": reviewer,
        }])

        df_all = pd.concat([df_all, new_row], ignore_index=True)
        df_all.to_csv(CSV_FILE, index=False)

# -----------------------------
# –¢–∞–±–ª–∏—Ü–∞ "–ö–≤–∞—Å –ß–∞—Ä—Ç"
# -----------------------------
category_df = df_all[df_all["–ö–∞—Ç–µ–≥–æ—Ä–∏—è"] == category]

if not category_df.empty:
    st.subheader(f"üèÜ –ö–≤–∞—Å –ß–∞—Ä—Ç: {forms['title']}")
    sorted_df = category_df.sort_values(by="–ë–∞–ª–ª—ã", ascending=False).reset_index(drop=True)
    sorted_df.index += 1
    for i, row in sorted_df.iterrows():
        artist_part = ""
        if category in ["–¢—Ä–µ–∫", "–ê–ª—å–±–æ–º"] and "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å" in row and pd.notna(row["–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å"]) and row["–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å"]:
            artist_part = f" ‚Äî {row['–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å']}"
        st.markdown(f"{i}. {row['–ù–∞–∑–≤–∞–Ω–∏–µ']}{artist_part} ‚Äî üéØ {row['–ë–∞–ª–ª—ã']} / 90")
        if row["–†–µ—Ü–µ–Ω–∑–∏—è"]:
            with st.expander(f"–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—Ü–µ–Ω–∑–∏—é ({row['–û—Ü–µ–Ω—â–∏–∫']})"):
                st.write(row["–†–µ—Ü–µ–Ω–∑–∏—è"])
else:
    st.info(f"üëÄ –ü–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {forms['title'].lower()}.")

# -----------------------------
# –ù–∏–∂–Ω—è—è –ø–æ–¥–ø–∏—Å—å
# -----------------------------
st.markdown(
    """
    <div style='text-align:center; margin-top:50px; color:#999999; font-size:13px;'>
        # –º—ã—à–∏ –≤—Å–µ–≥–¥–∞ –Ω–∏–∂–µ
    </div>
    """,
    unsafe_allow_html=True
)
