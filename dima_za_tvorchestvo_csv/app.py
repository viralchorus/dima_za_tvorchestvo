import streamlit as st
import pandas as pd
import os

# -----------------------------
# –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–∫–∏
# -----------------------------
def flomaster_score(R, S, T, H, V):
    B = R + S + T + H
    B_prime = B * 1.4
    M = 1.0 + ((V - 1) / 9) * (1.6072 - 1.0)
    return round(B_prime * M)

# -----------------------------
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CSV
# -----------------------------
CSV_FILE = "dima_za_tvorchestvo.csv"

if os.path.exists(CSV_FILE) and os.path.getsize(CSV_FILE) > 0:
    old_df = pd.read_csv(CSV_FILE)
else:
    old_df = pd.DataFrame(columns=["–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ë–∞–ª–ª—ã", "–†–µ—Ü–µ–Ω–∑–∏—è", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"])

# -----------------------------
# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å–µ—Å—Å–∏–∏
# -----------------------------
if "ratings" not in st.session_state:
    st.session_state["ratings"] = old_df.copy()

# -----------------------------
# –ü–∞–¥–µ–∂–∏
# -----------------------------
category_forms = {
    "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å": {"who": "–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è", "title": "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏"},
    "–¢—Ä–µ–∫": {"who": "—Ç—Ä–µ–∫–∞", "title": "–¢—Ä–µ–∫–∏"},
    "–ê–ª—å–±–æ–º": {"who": "–∞–ª—å–±–æ–º–∞", "title": "–ê–ª—å–±–æ–º—ã"},
}

# -----------------------------
# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
# -----------------------------
st.title("üé® –î–∏–º–∞ –ó–∞ –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ")
st.write("–û—Ü–µ–Ω–∏ –º—É–∑–ª–æ –∫–∞–∫ –î–º–∏—Ç—Ä–∏–π –ö—É–∑–Ω–µ—Ü–æ–≤. (–¢–æ–ª—å–∫–æ –Ω–µ –Ω–∞–º–æ—á–∏ –ø–∏—Å—é–Ω!)")

category = st.radio(
    "–ß—Ç–æ —Å–µ–≥–æ–¥–Ω—è –≤ —Ä–æ—Ç–∞—Ü–∏–∏ krap'n'kvas?",
    ["–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", "–¢—Ä–µ–∫", "–ê–ª—å–±–æ–º"],
    horizontal=True
)

forms = category_forms[category]
name = st.text_input(f"–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ {forms['who']}:")

R = st.slider("üé≠ –†–∏—Ñ–º—ã / –û–±—Ä–∞–∑—ã", 1, 10, 5)
S = st.slider("üéµ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ / –†–∏—Ç–º–∏–∫–∞", 1, 10, 5)
T = st.slider("üî• –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∏–ª—è", 1, 10, 5)
H = st.slider("üí´ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç—å / –•–∞—Ä–∏–∑–º–∞", 1, 10, 5)

st.markdown("### üåå –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ / –í–∞–π–±")
st.markdown(
    "<div style='padding:8px; border:2px solid #6C63FF; border-radius:10px; background-color:#F3F0FF; color:#000000;'>"
    "<b>–ß–µ–º —Å–∏–ª—å–Ω–µ–µ –≤–∞–π–± ‚Äî —Ç–µ–º –≤–∫—É—Å–Ω–µ–µ –∫–≤–∞—Å. –≠—Ç–æ—Ç –∫—Ä–∏—Ç–µ—Ä–∏–π –≤–ª–∏—è–µ—Ç –Ω–∞ –º–Ω–æ–∂–∏—Ç–µ–ª—å –æ–±—â–µ–π –æ—Ü–µ–Ω–∫–∏, –±—Ä–æ!</b>"
    "</div>",
    unsafe_allow_html=True
)
V = st.slider("üåå –ê—Ç–º–æ—Å—Ñ–µ—Ä–∞ / –í–∞–π–±", 1, 10, 5, key="vibe_slider")

review = st.text_area("üìù –û—Å—Ç–∞–≤—å —Ä–µ—Ü–µ–Ω–∑–∏—é (–ø–æ –∂–µ–ª–∞–Ω–∏—é):", "")

user = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º (–∏–ª–∏ –æ—Å—Ç–∞–≤—å –ø—É—Å—Ç—ã–º ‚Äî –±—É–¥–µ—à—å –°–µ—Ä–æ–π –ú—ã—à—å—é):")
if not user.strip():
    user = "–°–µ—Ä–∞—è –ú—ã—à—å (–ù–µ –∑–∞—Ä–µ–≥–∞–Ω)"

# -----------------------------
# –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Å—á—ë—Ç–∞
# -----------------------------
if st.button("–ò —á—ë —É –Ω–∞—Å –≤ –∏—Ç–æ–≥–µ?"):
    if name.strip() == "":
        st.warning("‚ö†Ô∏è –¢—ã —á—ë, –ß—É–ø–∞? –í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ü–µ–Ω–∫–æ–π!")
    else:
        score = flomaster_score(R, S, T, H, V)
        st.success(f"–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–ª—è {forms['who']} {name}: {score} / 90 üéØ")
        st.balloons()

        new_row = {
            "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": category,
            "–ù–∞–∑–≤–∞–Ω–∏–µ": name,
            "–ë–∞–ª–ª—ã": score,
            "–†–µ—Ü–µ–Ω–∑–∏—è": review,
            "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å": user
        }
        st.session_state["ratings"] = pd.concat([st.session_state["ratings"], pd.DataFrame([new_row])], ignore_index=True)
        st.session_state["ratings"].to_csv(CSV_FILE, index=False)

# -----------------------------
# –ö–≤–∞—Å –ß–∞—Ä—Ç
# -----------------------------
df = st.session_state["ratings"]
category_df = df[df["–ö–∞—Ç–µ–≥–æ—Ä–∏—è"] == category]

if not category_df.empty:
    st.subheader(f"üèÜ –ö–≤–∞—Å –ß–∞—Ä—Ç: {forms['title']}")
    sorted_df = category_df.sort_values(by="–ë–∞–ª–ª—ã", ascending=False).reset_index(drop=True)
    sorted_df.index += 1
    st.dataframe(sorted_df[["–ù–∞–∑–≤–∞–Ω–∏–µ", "–ë–∞–ª–ª—ã", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"]], use_container_width=True)

    st.markdown("### ‚úçÔ∏è –†–µ—Ü–µ–Ω–∑–∏–∏")
    for _, row in sorted_df.iterrows():
        if isinstance(row["–†–µ—Ü–µ–Ω–∑–∏—è"], str) and row["–†–µ—Ü–µ–Ω–∑–∏—è"].strip():
            with st.expander(f"üí¨ {row['–ù–∞–∑–≤–∞–Ω–∏–µ']} ({row['–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å']}) ‚Äî {row['–ë–∞–ª–ª—ã']} / 90"):
                st.write(row["–†–µ—Ü–µ–Ω–∑–∏—è"])
else:
    st.info(f"üëÄ –ü–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {forms['title'].lower()}.")
